<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0416.1335                               -->
<workbook original-version='10.5' source-build='2018.1.0 (20181.18.0416.1335)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose a Dimension' datatype='string' name='[Par치metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;City&quot;'>
        <calculation class='tableau' formula='&quot;City&quot;' />
        <members>
          <member value='&quot;Region&quot;' />
          <member value='&quot;Country&quot;' />
          <member value='&quot;City&quot;' />
        </members>
      </column>
      <column caption='Choose a Salesperson' datatype='string' name='[Par치metro 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Francis Martineau&quot;'>
        <calculation class='tableau' formula='&quot;Francis Martineau&quot;' />
        <members>
          <member value='&quot;Aiden Morris&quot;' />
          <member value='&quot;Audrey Baker&quot;' />
          <member value='&quot;Constantine Eager&quot;' />
          <member value='&quot;Francis Martineau&quot;' />
          <member value='&quot;George O&apos;Malley&quot;' />
          <member value='&quot;Ken Railings&quot;' />
          <member value='&quot;Laura Yeager&quot;' />
          <member value='&quot;Marianne James&quot;' />
          <member value='&quot;Michael Smith&quot;' />
          <member value='&quot;Priscilla Taylor&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Par치metro 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Region&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Country&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='SalesData (African Mobile Data)' inline='true' name='federated.147ovy41l6feeb1b3npqq0pvbref' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='African Mobile Data' name='excel-direct.1yx0vyn1fp9pe316dt4td0rb71fh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/smonsalve/Dropbox/5.LEONISA/TableauThursdays/TT03/African Mobile Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1yx0vyn1fp9pe316dt4td0rb71fh' name='SalesData' table='[SalesData$]' type='table'>
          <columns gridOrigin='A1:G1057:no:A1:G1057:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='string' name='Segment' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='real' name='Profit' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalesData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G1057:no:A1:G1057:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Chosen Dimension' datatype='string' name='[Calculation_499899616712728579]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [Parameters].[Par치metro 1]&#13;&#10;    when &quot;Region&quot; then [Region]&#13;&#10;    when &quot;Country&quot; then [Country]&#13;&#10;    when &quot;City&quot; then [City]&#13;&#10;end' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_499899616712728579]' derivation='None' name='[none:Calculation_499899616712728579:nk]' pivot='key' type='nominal' />
      <group caption='Acci칩n (City,Country)' hidden='true' name='[Action (City,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Region]</field>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.49866' measure-ordering='alphabetic' measure-percentage='0.470509' parameter-percentage='0.0308311' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_499899616712728579:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Juba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monrovia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abidjan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lubumbashi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algiers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaborone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yaound칠&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bujumbura&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N&apos;Djamena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antananarivo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mbabane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dakhla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lome&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abuja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Douala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cotonou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libreville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pretoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asmara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ibadan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mbuji-Mayi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cairo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ouagadougou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kumasi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Louis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lilongwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rabat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dar es Salaam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tripoli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Blantyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mogadishu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malabo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Windhoek&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Conakry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Porto-Novo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazzaville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Addis Ababa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Freetown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yamoussoukro&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose a Dimension' datatype='string' name='[Par치metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;City&quot;'>
          <calculation class='tableau' formula='&quot;City&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='SalespersonData (African Mobile Data)' inline='true' name='federated.1mmktjd1q24n3311c24td1yt5lhy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='African Mobile Data' name='excel-direct.1wdlpya1ayiv1x10k0o431f24xms'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/smonsalve/Dropbox/5.LEONISA/TableauThursdays/TT03/African Mobile Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1wdlpya1ayiv1x10k0o431f24xms' name='SalespersonData' table='[SalespersonData$]' type='table'>
          <columns gridOrigin='A1:D161:no:A1:D161:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Salesperson' ordinal='1' />
            <column datatype='integer' name='Contracts Sold' ordinal='2' />
            <column datatype='real' name='Close Rate' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[SalespersonData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salesperson</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Salesperson]</local-name>
            <parent-name>[SalespersonData]</parent-name>
            <remote-alias>Salesperson</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contracts Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Contracts Sold]</local-name>
            <parent-name>[SalespersonData]</parent-name>
            <remote-alias>Contracts Sold</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close Rate]</local-name>
            <parent-name>[SalespersonData]</parent-name>
            <remote-alias>Close Rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalespersonData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D161:no:A1:D161:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Selected Sales' datatype='integer' name='[Calculation_1070449397370593280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Par치metro 2] = [Salesperson] then [Contracts Sold] end' />
      </column>
      <column aggregation='Attribute' caption='LOD - Selected Sales' datatype='integer' name='[Calculation_1070449397371219969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{EXCLUDE  [Salesperson]: sum([Calculation_1070449397370593280])}' />
      </column>
      <column caption='Difference from Selected' datatype='integer' name='[Calculation_1070449397371887618]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Contracts Sold])-sum([Calculation_1070449397371219969])' />
      </column>
      <column caption='IsSelected' datatype='boolean' name='[Calculation_1070449397372502019]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Salesperson] = [Parameters].[Par치metro 2]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_1070449397372502019]' derivation='None' name='[none:Calculation_1070449397372502019:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.349451' measure-ordering='alphabetic' measure-percentage='0.393407' parameter-percentage='0.257143' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1070449397372502019:nk]' type='palette'>
            <map to='#7b7f7c'>
              <bucket>true</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose a Salesperson' datatype='string' name='[Par치metro 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Francis Martineau&quot;'>
          <calculation class='tableau' formula='&quot;Francis Martineau&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtro 1 (generado)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit Dashboard' type='sheet' worksheet='Profit by city' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Hoja 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData (African Mobile Data)' name='federated.147ovy41l6feeb1b3npqq0pvbref' />
          </datasources>
          <datasource-dependencies datasource='federated.147ovy41l6feeb1b3npqq0pvbref'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147ovy41l6feeb1b3npqq0pvbref].[Action (City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.147ovy41l6feeb1b3npqq0pvbref].[Action (City,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.147ovy41l6feeb1b3npqq0pvbref].[tmn:Date:qk]' scope='cols' value='Mes' />
            <format attr='subtitle' class='0' field='[federated.147ovy41l6feeb1b3npqq0pvbref].[tmn:Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.147ovy41l6feeb1b3npqq0pvbref].[tmn:Date:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Segment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]</rows>
        <cols>[federated.147ovy41l6feeb1b3npqq0pvbref].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit by Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData (African Mobile Data)' name='federated.147ovy41l6feeb1b3npqq0pvbref' />
          </datasources>
          <datasource-dependencies datasource='federated.147ovy41l6feeb1b3npqq0pvbref'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147ovy41l6feeb1b3npqq0pvbref].[Action (City,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.147ovy41l6feeb1b3npqq0pvbref].[Action (City,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Segment:nk]</rows>
        <cols>[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit by city'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData (African Mobile Data)' name='federated.147ovy41l6feeb1b3npqq0pvbref' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.147ovy41l6feeb1b3npqq0pvbref'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]' value='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]' />
              <lod column='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Country:nk]' />
              <lod column='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='206' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147ovy41l6feeb1b3npqq0pvbref].[Latitude (generated)]</rows>
        <cols>[federated.147ovy41l6feeb1b3npqq0pvbref].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit vs Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData (African Mobile Data)' name='federated.147ovy41l6feeb1b3npqq0pvbref' />
            <datasource caption='Par치metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a Dimension' datatype='string' name='[Par치metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;City&quot;'>
              <calculation class='tableau' formula='&quot;City&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.147ovy41l6feeb1b3npqq0pvbref'>
            <column caption='Chosen Dimension' datatype='string' name='[Calculation_499899616712728579]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [Parameters].[Par치metro 1]&#13;&#10;    when &quot;Region&quot; then [Region]&#13;&#10;    when &quot;Country&quot; then [Country]&#13;&#10;    when &quot;City&quot; then [City]&#13;&#10;end' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$ &quot;#,##0;-&quot;$ &quot;#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_499899616712728579]' derivation='None' name='[none:Calculation_499899616712728579:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Calculation_499899616712728579:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-transparency' value='206' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Sales:qk]</rows>
        <cols>[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Salesperson Close Rate and Contracts'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalespersonData (African Mobile Data)' name='federated.1mmktjd1q24n3311c24td1yt5lhy' />
          </datasources>
          <datasource-dependencies datasource='federated.1mmktjd1q24n3311c24td1yt5lhy'>
            <column datatype='real' name='[Close Rate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Contracts Sold]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Salesperson]' role='dimension' type='nominal' />
            <column-instance column='[Close Rate]' derivation='Median' name='[med:Close Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Contracts Sold]' derivation='Median' name='[med:Contracts Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Salesperson]' derivation='None' name='[none:Salesperson:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Contracts Sold:qk]' field-type='quantitative' max='20.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Close Rate:qk]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Salesperson:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Close Rate:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.29999999999999999' value-column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Close Rate:qk]' z-order='1' />
            <reference-line axis-column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Contracts Sold:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='10.0' value-column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Contracts Sold:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Contracts Sold:qk]</rows>
        <cols>[federated.1mmktjd1q24n3311c24td1yt5lhy].[med:Close Rate:qk]</cols>
        <pages>
          <column>[federated.1mmktjd1q24n3311c24td1yt5lhy].[tqr:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' size='5' />
      </table>
    </worksheet>
    <worksheet name='Salesperson Comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalespersonData (African Mobile Data)' name='federated.1mmktjd1q24n3311c24td1yt5lhy' />
            <datasource caption='Par치metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a Salesperson' datatype='string' name='[Par치metro 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Francis Martineau&quot;'>
              <calculation class='tableau' formula='&quot;Francis Martineau&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mmktjd1q24n3311c24td1yt5lhy'>
            <column caption='Selected Sales' datatype='integer' name='[Calculation_1070449397370593280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Par치metro 2] = [Salesperson] then [Contracts Sold] end' />
            </column>
            <column aggregation='Attribute' caption='LOD - Selected Sales' datatype='integer' name='[Calculation_1070449397371219969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{EXCLUDE  [Salesperson]: sum([Calculation_1070449397370593280])}' />
            </column>
            <column caption='Difference from Selected' datatype='integer' name='[Calculation_1070449397371887618]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Contracts Sold])-sum([Calculation_1070449397371219969])' />
            </column>
            <column caption='IsSelected' datatype='boolean' name='[Calculation_1070449397372502019]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Salesperson] = [Parameters].[Par치metro 2]' />
            </column>
            <column datatype='integer' name='[Contracts Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Salesperson]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1070449397371219969]' derivation='Attribute' name='[attr:Calculation_1070449397371219969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1070449397372502019]' derivation='None' name='[none:Calculation_1070449397372502019:nk]' pivot='key' type='nominal' />
            <column-instance column='[Salesperson]' derivation='None' name='[none:Salesperson:nk]' pivot='key' type='nominal' />
            <column-instance column='[Contracts Sold]' derivation='Sum' name='[sum:Contracts Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1070449397371887618]' derivation='User' name='[usr:Calculation_1070449397371887618:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Salesperson:nk]' direction='DESC' using='[federated.1mmktjd1q24n3311c24td1yt5lhy].[sum:Contracts Sold:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mmktjd1q24n3311c24td1yt5lhy].[sum:Contracts Sold:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Calculation_1070449397372502019:nk]' />
              <text column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[attr:Calculation_1070449397371219969:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mmktjd1q24n3311c24td1yt5lhy].[usr:Calculation_1070449397371887618:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mmktjd1q24n3311c24td1yt5lhy].[usr:Calculation_1070449397371887618:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Salesperson:nk]</rows>
        <cols>([federated.1mmktjd1q24n3311c24td1yt5lhy].[usr:Calculation_1070449397371887618:qk] + [federated.1mmktjd1q24n3311c24td1yt5lhy].[sum:Contracts Sold:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Profit Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='3' type='layout-basic' w='99064' x='468' y='885'>
              <zone h='89934' id='1' name='Profit by city' w='49532' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='7' name='Profit by Segment' w='49532' x='50000' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='8' name='Profit Trend' w='39193' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8296' id='6' name='Profit by city' pane-specification-id='0' param='[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]' type='color' w='49532' x='468' y='90819'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='9' name='Profit Trend' pane-specification-id='0' param='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Segment:nk]' type='color' w='10339' x='89193' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' name='Profit Dashboard'>
      <viewpoints>
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profit by Segment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by city'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Profit vs Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card mode='list' param='[Parameters].[Par치metro 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Calculation_499899616712728579:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Calculation_499899616712728579:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Salesperson Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card mode='list' param='[Parameters].[Par치metro 2]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1mmktjd1q24n3311c24td1yt5lhy].[usr:Calculation_1070449397371887618:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Calculation_1070449397372502019:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Calculation_1070449397372502019:nk]</field>
            <field>[federated.1mmktjd1q24n3311c24td1yt5lhy].[usr:Calculation_1070449397371887618:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Salesperson Close Rate and Contracts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Salesperson:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-10-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1mmktjd1q24n3311c24td1yt5lhy].[none:Salesperson:nk]</field>
            <field>[federated.1mmktjd1q24n3311c24td1yt5lhy].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Hoja 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.147ovy41l6feeb1b3npqq0pvbref].[tmn:Date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Segment:nk]</field>
            <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Profit by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Profit by city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[none:City:nk]</field>
                  <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[none:Country:nk]</field>
                  <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[sum:Profit:qk]</field>
                  <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[Latitude (generated)]</field>
                  <field>[federated.147ovy41l6feeb1b3npqq0pvbref].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Victoria&quot;</value>
                <value>&quot;Seychelles&quot;</value>
                <value>-143.94</value>
                <value>-4.6159999999999997</value>
                <value>55.450000000000003</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hoja 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit vs Sales' width='192'>
      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
      oYdsjlRIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Salesperson Close Rate and Contracts' width='192'>
      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
      WxZJkqT/H1WeVqsz6MTwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Salesperson Comparison' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deZAc133Y8W93z30fe87eC+wuFidBgABBkRRlyrJMSZbkg7blxHFiV6qc
      P+2qVKWSSuUPp5IqV7lSSTmJY/m2q2hKkaxYpiVKpHgBIHEDiwX2vo/ZnZ377ukjfyxIERaA
      XXBnd3Z33qcKKGCn5/VvZuc33a/7vd+TTNM0EYQ6Jdc6AEGoJZEAQl0TCSDUNZEAQl0TCSDU
      NZEAQl0TCSDUNZEAQl0TCSDUNZEAQl2zfPw/iUQCXddrFcuW5PN53G73htvpuo6iKDsQ0cZ2
      UyylUgmHw1HrMIDqvC/lchlFUbBYLI/c7r5HQ6HQlnZaa42NjRtuo6oqNpttB6LZ2G6KJZVK
      EQgEah0GUJ33JZPJYLPZNkzqR6eHUDf+9xvTjC6lah0GAKYJn3uina8937eldl599VXK5fIj
      txEJIACgGQaqZtQ6jI9oxtYHKb/88ssbHgFEJ1ioayIBhLpW1VOg1Oo0qwU3/d1NP/FYLBol
      2NLyyB3qlTKX338XzeLl6PEnCbitABQyMSpKEL9bnLHVm+zMFb7+D9cZfOIsB9wZ3rkywonn
      fpbTA21Vab96nyjTJLaWI63mMTUPsYyBgzJWt5uZkSHmVss85bCTSazhCzcyffcukb4jWKkQ
      9DvJ5MBrlwhFuvFbNZKZDEujk2juZjqCBiXZQSlfwaanGV/Oc+xYD/G5FXR3kK6WYNVehrC7
      LE4s8lO//M84ErSRTad4ua2dt4cWoUoJULVTIEMrMre4THF1gbVcloVomsRKlNWFCaxNgxxs
      byAdnUe1B1gdHyJVKjM6Pk1iZYmZ8SkMhxMwWZwaZS5WxCmr5IoVRkbuUC4WOP/2eVx+O5ev
      DpONLbEYW2JmsUB70+64dCdsj0B3F0OvvcqffeP7mIU1zt+Y56eef6pq7VctAUqpZYJtA/T2
      97C2miW1cJfbE/MoDhezdy4zu5JGtrppawkTDocwTJlwOESk0c90skLIIYEEpqFTyKYpFvOk
      ixUcDjuyzcWZU0eYmloiFPBg93hxO51E2ttQZKlaL0HYhVKJOIViEbvDymvf/jsmp+5y4epI
      1dqXajop3jSZvHMDV6Sf1uDGd3EfJRaLiRthW/B737jK3YXdcR8A4GdOdvDrL/R/4ufvjRth
      ksSBIydrGoJQ38RlUKGuiQQQ6pq4sC4A8NLxJr50uqvWYQCg6TotQc+W29nMWKDadoKrSHSC
      tyabzeL1emsdBrCzo0HFKZBQ10QCCHVN9AEEAL51dZnl9ExN9v27XziC1VL972IxH0DYtNWs
      ykQ0W5N9G9vUDRXzAQRhAyIBhLq2pQTQyzmuvH+ea7fHP5rCZpomxgOms33483gsRjkbI1m6
      //HozAjvvPMOF67cQtUfcEgspYhlK1sJV9jlzEqe1998DwCtFOeNt69s+z63lgDFIqGeQ7TY
      NZbiayTja8STCRaXYiRXl5hbWkWrlJmbniKdTjEfjbE8v0gpNc9qTie6MMtiNI5pQkv3IRo9
      Pp48fRyjkGJyappCSaVQLKFVypRTy8wny2TiK8wtrqAbFdLxOPFMoVrvhVBjdy5f4L3rtwGT
      89//PsMzc9u+zy2eAumM3brK6GIcu5bg2vAikqmRzeUYunaF1WSG2dG7lGUbhlogk//Y175R
      YXrsDm+/8w7p8v2TsTOJZW5cOc/1u/NMTc2wMjdNXpMwSinuTkcpJpaZXZnh6pXxXVNXR9ga
      o7DM7SgcaHKzPHGTYqCPoKWCZmzvRP0tJoBC//HTfOaFZwm6HfT09eN1rE9j7OzpITo/iylJ
      5LMZKvr9L0QrZtGdYTpbAmj/pBpBLJ7h0LFBZA0aHCaTaZ2gSwFJxtTK5IvrRY86D/QTcNu3
      9hKEXaGYK2Gqa1y/do2xxTTJxVGuXrlFLP/oy5hbtaWhEKauo5lgtSiYRgXNULDIJhXNoFLK
      oWLF73aQSqVwenzIsoRkGFgU0CQrpUwK02LH43ahyBJquYzFbkcvFcgWVVwOO5PD1/D2PEln
      wELZUDDVHIUKBPxudA2s1vUjgBgKsTW///e3GV3K1GTff/ivzmK/93vM5XLYbDZsViu5fAGP
      55PNE9mR+QCSomD98N+yFeu944nNpmCzBfkw9FC44SeeawNswfsr0dns69/mssNFyOEC4Mjp
      T330uF0BrD4+fEmyFWGf8Xg8qKoKkvSJP/yPQ1wGFeqaSAChromhEAIAz/Q1MNhWmwobFmV7
      ChuIsUDCph2LuPD5fLUOo6rEWCBh0/bquhBbJRJAAECS6rO+kjgFEgD4q0srTK5M7Mi+XjrR
      xueOt277fkQfQNg03TCpPGgQ4nbsa4emoYs+gCBsQCSAUNeqngB6pciNG0NoJuRyWfR7cwOi
      0ehDn2PqGteuXKasmySiEwyNLj18B6ZJJlubqXtCdY1ff4evf/2PuTg0xdW3/oE/+8u/ZSm1
      s8Pbq94HyMfmyZYN8sUKuWQcq9XK3eGbzGdMPut3cO3mGAePHKcQm2FpJcOR00/hwqCUS5HI
      5EnHouRLrSSWpxlfzHDs+CCZlWVyug2vtUSmbMOqaFBKcXsyxomTx3HbRVdmL2rrP8lXGpt4
      /eI1jIqNLz3bx3s3xnnpmcEdi6HqR4CRiXl8UorxpQSZVIK1hWm8Xcfpbg5w+/oVCsUso5ML
      xDMFjg+EWVxdnyPQ0NpEbGEB0+7BbpaYXM5ytLeJiZlpJqeW6GhvZnJyho6OFhLJJLHVGFar
      gr7N48WF7SPpWd569yaNkQM8d6KZ19+6SGKHJzhVNwH0PLKzgZaufszMKrKiYHc4GLt5icV4
      lnAwBIqNhqAHt8eLzW7HKgESKDY/5JfwhCMoNjt2LcvlW6N4fX6aI+3YLTJNre04LDKKouB2
      O0msLJEuqlV9CcLOufH+RRLZFNFYkpXoMrGMztOnDu1oDKI0Yg3tplj+2/dGGN+hsihfPNnG
      z56IPPRxURpREHaISAChrokEEOqauH4oAPCZgz5++mjLjuyryffo8/JqEWOBhE3rbfbumvUB
      qkWMBRKEDYgEEOqaOAUSALiwkCdR2vx9ALdN4eeONG9jRFsn+gDCpqXLJkuZzVdh89p3f0lK
      0QcQhA2IBBDq2uMlgGmSjM5y4eIlErlPWrTUJBdf4sLFy6QKKuVcikQmx/jYOLppkllbYG4l
      /bHty8RiGdbWYuyPUUv7i2loDL//BjOJCoaa5pt//ed8MDxb67A27bESQM0nmYzmOfvUCeyK
      RCEdZ3puCcPQWZ6fJZbMoRYKrMViFMol5memiMbTVEo5pmfmKFUMzEqB4akYTz15mJE7d0jE
      Y1QqsDA7RqagsjgzyuJqlvRalOm5RTSjwMJ8gqXFeXS9wuLsNMlcnny+hKGVKZTFohm1pJay
      2NU4E2sGQ298nwOf/QrjN96vdVib9lid4FK5QDjcxMTN9ykHB1kZ+gGJvM7SwEl8Lidq9A4+
      i0LKFaQpEaVoD5CYGGWxtMb4Uoru48/yVJcDd7gRq92FwwqNka71BTIagywvr4DNhV2BlYVJ
      rozMYTz/4+K4sdnbvP3BGK5whJ7WAK1BF6Y3gssuquTWit0V5GBXKzNliPT28sq3/wabv7vW
      YW3aYyWA2+3n7tgQXpcbRQZfqIW2gTYcFol4Kouug8Xppm+gl+LEbeK5HKpm4HMHOHqih4bm
      AIrLQXn1CsOFNSqSE4vVhq6qWH3NJOeHaT54lFKyQqoocehgF1pZ/ShMWbHT0z9Ic1MjjfYC
      F8dSfObZA9vxvgibVC7EuXThGjdMHckXp6u7j6nZh09/3W0eKwEUh5eTTxwnky/j9Qeg+SzZ
      fBl/IEA4m0a2u3FaJCQAt4v520M09QwyONhJMpPD43WBbOHEkydJZYr4g+u1KGWrla6OTjpa
      WrE47DQ3mhhqiJIu4XE5MSIArdisFuy+JLLdTWxmge6unvUJNULNKFYnHWe+SES2EGl9mlh0
      iWfOPVPrsDZNTIipod0Uy6s3lplPlzbe8B6vXeFfP925LbGICTGCsENEAgh1TQyFEAA43OSi
      M+jc9PZ2y+7vfImxQMKmdXokfD5/rcOoKjEWSNg0sT6AUNfE+gBCXVsoKdyZTT3wsb4GF43u
      3XG59nGIPoCwaTOpEsvZB39YGj3WPZkAog8gCBsQCSDUtUcngGmSjC2zEF1jJ2owm4bO4uwk
      0zOzlLUd2KHwWNRChqnZ9bUbUitzXB+e+Gj9h73qkQlQSC0yPp+AiopmGqiqimGY6Lq2/m/T
      RKtU0DSd1YkJ4pUKhq5/9Jiua6iVCrquMzExjqbrLC2vzx+oqCq6YWDoGpWKhmmCXlZZTSSx
      2+1IGOvb6Aamsb7v9e31e9ub6LqOrovy6DvDYGp8lAuXrgAl/vG1HxEbfo+r83t7sZJHdoKz
      a3G6Bk/Q7ITJ4auspIvYfK2YqVl0SccT7mfqzmUigycxZ8co5Mr0+UzeunCVvlMvoK9MUZEh
      3NjOxNgwkjNIJhYluTxHrqwiezooLV1jbq3Ecz/7i0ScJmvRRQplA4cFfvTmD3G3HqUvrLOS
      KYIliJSaYiKa51OfO8PkpRn6zzxJV3NtVjivLzKHTjzFQuyHYKwRaD3J584pfPfmGnTt3QW2
      H3kEcAf8LM3Mkk6myKoGA4MDoJbwNrZx9pmTWHQrR44eoZRIEOnpoKe3l1S2xOnTxyhmcgRb
      uzn1xDG8/iDd3V20N65/UC3uIGfPncJrkdFkF2fPPY3XCiDRceAQJ08co5BJMnDsJBatSFGX
      OXy4H4upUpI8fOrcaTx2K10Dx8WHf8eYFPNZ8vk8+bKL5OoIQ1dH8UeCtQ5sSx6ZAJ6GTpqd
      ZZbiWQ4fGmBxbpmDh/poi0QAL5E2H6au0d7TS3NXF+n5OSJt7ZRNF4MHO4hEmrA5vYSDXppD
      XqKJDN3dPUQiEcBOW3sjTxw7Qi5Xwm63INssmKUcI6Pj+JvaMXWTwcP9BBwm//i9N1DcDTx5
      oo90vozTHiIS2bvfPHuPyfitS6iqyvWRNV58dpAlpZNzvXv7C2hPzAcoF/Pkiip+fwCL8uA7
      lmI+wNZ8dyT20PsAL/QG6Qu7dyyWnZwPsCduhNmdbuzOnfsFCPVD3AcQ6tqeOAII2y9kA3vw
      wacLHtve/Ji8/vrraNqjbyjtzVcmVN2xRse+Wx/gzJkzWK2PLpkjEkDYtwKBwP7oBAvbbz9O
      B5icnESWH93NFQkgAKBXisD+OgX6o6//H9LpB89x+JBIAGHfam1txed/9M1ScRlUqGsiAYS6
      tmECLEzc5t13LxBN5TfVoGmaGP9kdEV6dY6leB4wmRodpviAiuamad77Y7AHRmfsX6bGq3/y
      3/mD//HnFOrg17BhH6CsWzn33DNYDJV0MokmK5SScWR3kLDPSmxlDasnRNijMLuwSijoIFdx
      Y9OSaBYvrU1B4rkiyeQkrd427t6dwNvWT2xhDkegiYBTIZNOEV1aQrW66Qj5wBNELqXIlqCj
      vZnowjzOQDN2M080nqOjsx21rGFTTFBs2Ky7f72qPSN7B0fvz/FbodtcnK7wYu/+Lj2/YQJk
      4wucfy/Bkf4Wrg/HOX36IGO3bzJdsPGFp7tJ5B2U4rOsSUU8DW1o5Sy5gs7M7Zt0HD5JS2MQ
      UAjYYWx8hfbeCOhF7ty8SUL28/yAn2UtRMBux+JwoWZy6FYry7MLBGwGI+k1bt25i83XwpkD
      Pq7fuE2qcA4JhYhXw3S30trg2YG3qk7ICoZeoaIZDx14uJ9seArkDbfzqWfP0eC109nbT8DM
      oAe7aQq4kK0O2tra8bnsWCwK2UwGzTABKz097czPTqPdm7AVagwxG0sTtCuUE1Ecbf2EPDYs
      Di99B3pp8HvIZbPoJoBEuKmV1sYghmyj5+AgJwYPEk8VOHxsAL1YoZCMMjG9QH2Wc9pGnkHk
      6Ju8cr3I2a79f5Fww+HQFVXFYrMhGRqqLmOzQCqZRLI68DhtIFvQNQ2LbJJIZfH6PEiSQimX
      AasTr9uJplVQZJlSRcMmg2SxkE6msDicuGwWJMWGbGqk0hlcbg+KRcE0TBTJwJAs5FIJJLsL
      h2KQV3XcDheVco6KqeD1eLAoshgOvUXp5Cr+YFOtwwCqNxz6D//3/yRfeHTfdcMUt34YiGzB
      du94EQiF79tGsa2fJzY0/PjntmDox23cG4/hUn58rh4K398GWAiGfvwc7m0qA4Fww0c/tt+r
      32q37+2ZSMLuIC6DCnVNJIBQ1/Z/L0fYFMWy+bUB9oqgL4DDZn/kNiIBBAD24z2v3/iN3xC1
      QQXhUUQCCAB1O/xEnALtceorL0MxseV2tKf/A/he2HpAu4hYH6Ae6OX1P1tl7r8aq2J9AGHT
      LJb6/C4UCSDUtaomQC6ZIFdSH+9JRpnZuWUMNcf8Urya4ex9hsqFH/w//vhP/or5eI6Lr3+L
      v/jr71CodVz7SFWPe6ViHsniwOOQuXv9OqqzgQMtbnA1UUjHsFkUEmsreDxexqcXOHT8CcIe
      O1pmiVspK23d/SxO3WW1aOVwTyM3bw7T3HuYJpfGzaExIr2DeM0U48t5jh3rIT63gu4O0tWy
      X8cFSfSfep62xjvMzt1gNuXnF75yDrsJ7P+Ryjtie06BtDK5ksr42F1iS7NkyrCwuEB0fhJ7
      oB1TzWOU09weWwAkug4eJJurELCWuTF0l/jCOAuxLBVd5c7QCJPTCzzx1HHW5me4fHWYbGyJ
      xdgSM4sF2pv2dnXihxm68D1+cHmc9PwIMxUfpzpczEyM88pf/hG35nNV31+9rhNc1SOAZJS5
      cfl92ttaSBcqOBwOrDY7ty+/hyEr9HU00hL2MBVNI1ttyPL615hscRJpDaNY7Ph9HiRnEKmc
      paLL2G0Kdknl0gdXka1hQgEPJcmO2+kk0t6AIu/Pr8Jjz3yeY8VV/svvf5OG1laC4Zc40KST
      LCl4HNWfpVWv9wH2RHn05ekRJhZjdB48QVfLg8tc1Ot8APVvvlyV+wCF536PwMCnt9xONYjy
      6P9Ea88hWnsO1TqMfU3ej6XhNkFcBhXqmkgAoa7tiVMg4eEsn/mPoD+g0NJjMu3tVYhmdxFj
      geqAHDlVlXaMZLIq7ewmYiyQsGmS6AQL9UxR6rO6njgF2mO0ke+h3/pG1ds1Tv02eE9Xvd1a
      En2AfcjMrWIs3ax+w8eqP7yi1kQfQBA2IBJAANhwOdH9alsSoJjLUqporMVW0PSHDDWqFLl6
      6SJXh8buFdRdt76+gM5aLIFRh2sFJBdG+fM//VOuT0QppFd5893LtQ5pX9uWPkA2mUBTIJ6V
      8HvzTM/FibRHyKcSpAsV2tvbsKo5PJEBwtoas6tJvHqWsuymxaMTLdtIzC+jGBkMdzNaJknJ
      tNDZGiK6uIBh8xF2yyzGMrR3tGO37J8DmeQK80u/9CW++Z13CJ07Sjqz9YFum1GvV4G255Oj
      F7l29RaNkVZuXXqXy5fOc3VojLHJBYr5NRKpEgBTd65xayqKz2VnenyYd374IxK5DNny+gTt
      UjZBuZhkbC7F0uI88aUp1vIwNzHB2Mgt5pZjaMb+mMytJhf4m1dexVBkvvXKt/C2dNDZO4DX
      vjMfTHEfoJoUJ08/9ymWx0dQnD4Gjz1JTyRAsLGF5uYG5HunPD2HjtPeHEAr59AkLwcifsoP
      OBVtirTTEPQhAcVClpKq0dzWhZSNsZLeHxMEbcF2fu1XXiYxO05Ldy+xxVlmRm9w48YNrgxP
      1jq8fWtbToHCrRGQFbxHXMgSpDM53F4f4bCMIgPIINnpjYBVClHWDI6dOAKyFafLjomC2eBF
      kU2QFRoMGQknai5GbP4OruYDBAINHD19lkBwf61t2947gOxJcPrpVqRSiq9+9avYPft1ymft
      bUsCKJb1GUuKff0abEPDg6/FfrjegEMBhz10/4OWjx36FQAZazDCF778lY9+bHe6qxXyruHw
      BOj13Jvm6XUS2HiOT1UYRn1Oidw/vUdhSwyjvq62fUgkgACALNfnR0EMhdhjlLaT8MxvV7/d
      QH3OB9gTk+I3o14nxVdLNpvF690dFxR2clJ8fR73BOEekQACUL91gUQfYA8p/+N/Qh/53ra0
      Xfnsf4ZjL25L27Ui5gPsN0YFtCqsBfAgYn0AoZ6J9QEEoQ49dtrn03FMRwC3TSYeWyXY2IxS
      pYGEhlamYlix2+ozL4c/+CEXbk1x8tMvUZ66zJ3FDC9+8av0Nj+4HqqwdY/9SVtcnGR8bA4q
      Cd7+0fvkKwaqqqIbBoZhoGnrE2FKFY2KqqLpBoahU6nc20bXqagqhmGiaxoVTePDCxDlXJRo
      UkWrVKhoOqZpUKlU0DQNtVLBNE20SuWjNlW1sq+uXnQfOcvPffYMU+PTHH/ms3xqsJnZZbFo
      yHZ67COAZA1g17LMTGbp7OtAzUR57fU3CXUfp9OWJYkfn9tAtiqc//7rVMK9HGtWiGVKyJ4I
      9uICqmni8HUSnbjGasnCF774EiH3hzc+VM6//gazRTuff7qXW2Nx1HIGr6IQOTbIjbfeRvK1
      c6AJ5hISL3z6GbzbUC58J8Vnhvj+zSgvnevnrQ9Gae45QiE2xa2ZJP1nHr3SebXomhgMt2nh
      oIOZpEHIBvGVOIdPP4Wk5rC5Qzx56gg2oJxao/HQk9jNMorLz1NnTxN0WHAFWznz9BlsagrZ
      38q5U8exWyQq5RLxlTUkNYPSfJAmvw1DsnD4xGkOHOjl9OEestkczd1HeOJwD60dfbR6ZOK5
      YpXfkp0X7j7G177809y8dJ50OsnKyjIXLt8glVglmSntSAzmvlwrfmOPfQRoaWnFaVM46tFw
      yjoWq8LoxAJHDvfjd9qxSBItbZ3YbDYSmQlajx4m7HWgyDYikQbAAGy0HzxEOLVENKNhURTy
      iShZSzOH2lup5FLoDYMEQn5M2YLXFsGmQH+Tg2VjlAoWbApYfA20+D3Vf1dq5NNf/Bq1qtAv
      y/U5JVKMBaqhx42l/A//Hv3Oa9sSS+ULf4D/8Ge2pe3HJcYCCcIOEQkg1LX6vP23R1mf+hdY
      Bl/alrYr7s5tabeWxHyAB9jLfYDtlEwmCQZ3x+R70QcQdpyoCyTUtXqtDCf6APes3r7G5f/1
      X3d0n6Zp7ppv3iO/+Tt4n3y61mFUlZgP8BjKmRSrQ1drHUbN9OeytQ6h6sR8AEHYgEgAARDr
      A2yByezkOIWyjlHOcWdiFtP4eF1/nWQy88gWYrEYAEalxM3LFxmZWf7JvZgGhmnea7dCMvl4
      S/pUCkm+/cpfcmt6FU3N8e5bb5NXH6sJYR+qQh/AJLmySNkexFuJM7e4Rtgp4w43U0hEMexO
      YvPLpNIBIu0R1hbmkT1BmgNOFheWCDS3M7+4QGNjI4m5uyitgzS7oZhLsbKWwum0oxpWmh1F
      Foo25kZGOXSij9WZOKmGAB3tbVg2MSNn5NI7dD/zZeYufJeQ7Qy6liddBvfuuAxfc0qdToms
      yqt2hppQU6tkJJOQ10EmlwFTZT6u09XhpFQs4XBkWVlbY/L2TaYLNl48HOD87XkCkQQtvvUD
      UbBjgKWhW4zIfsLWItjcLMUSeABXq0JB6sLhcOKwWSkUS1gyCRLZIE2BhxfJ1YsZvvPt/8vA
      6ee5/cY3WVhe46kv/RpNq7PVeOn7xu64FrXzqtMHkKx4KJGzurHK62+lpFjQSnkKZRVfqInW
      lkbk7Ap6sJumgAvF6qLv0BEOH+j4qJlCJoXi9EO5hOJ009bSSlNLC2GfGwOw2JxYpQqFkkqw
      sYWWxhDSBuPYFaePn//av6S7yUl7exsNrT1IiXE+uHKD968OVeXlC3tXFY4AEj093SiSQQsW
      JKMVWZJQLBacLh+mxYEjbMGiyDg8ITzhNJK1D6/LhiuVxub00trgB8AVaKAFG109PuwWUBQL
      XS4XktGAJJv4JRv6sSNokpUGv219rQFpczlsdwXpPTjAibPN2M0Cz3/+q8i2/VdeXXg8VUkA
      m+3eegAf+xvA679/bIkMBELhj/4fCjfc97hisRFuuP9nH69arAB4/J8oSovNSVdPz71xJg0c
      8Dds/KQ6ou+TpaYel7gMKgBgigQQ6plYH6DO+Tt7efK3fmdH96nr+q4ZhOZr66p1CFUn5gM8
      wG4ag7+bYqnX9QHuOwIkEgl0fW/Wh8nlNndneDd96+6mWAqFAqXSzpRg2Ug13pdSqYSiKFit
      j64ZdV8ChEKhh223J2zmCKBp2q4pBCtiebBqxCJmhAnCJtRdAuyWbzkQsTzMTsZSdwkgCB+3
      e9J+2xjMjI0QL8s8eXSAu9cuspzWOPPMGUauXqIouTh79hT2atV434To6E2GVzN09Qwip2eZ
      Wc1y9NQ5mnw7Uwj3fiZjty4zFytw6pnnCDpr1Sk3Of/ma5i2Zp44eYAbV29g8bZy5olDyJ/w
      V6PmVjl/YYqjp5+m2ffgvkAdHAFkuvsP47FLQAnd1sinn+7l7tUxwn1H6Wv1k87vbIHdtWyR
      zvZOIiEHOdnHc2eeIL76k3MgdoZKGT8vPnuIuZm1GsUAUEAz/PT095JNrNF/7BwtLpVs+ZNf
      pY/NrfBTzx0juvDw17WvEyA2P87N0Y8Pe5bANDB0A0mWMIz1CTbSDg0GLiSWuHzjDm0H+nDI
      OsN3x+HDST41mxwvYWJiGgZSLe8Gmzb6D3WTnLpNtLheMGC9aMAnb1ICTOPRhQf2dQI0dvRx
      YqCNsZtXmRifYGIxi9VIceHaAodP9ZOZvsv0WgG/+9GXyqrFFYrw1BOHya0tMTM7j7+pHZ9U
      4MK1YZqaW3ckhp9kw63kefuDSbq6angZXC0yMzdLXHXQ197E1J0PiFfc947cn0xjVytvX7xL
      pOPhAx/r7k6wUB/EfQBB2ASRAEJdEwkg1DWRAEJdEwmwAyaHL/PWuxdJFe4VIjJNFiZuM7Wc
      YOL2FVbSjx6zviFTY+jaFZKbLHSk5hNcePcd5mMfr9dUYn5u9bF2u7q0SHGPr87ojw8AAALf
      SURBVC4pEmAHvH99iMM9Yf721e+wODrM1MI8f/eD99Czi7xxcQibYrCyvESupJLLZUklUpQK
      WZaiq1T0CvHVVZajaxiGRmxlmXS+RCYRI5ZIY5qQGL/IWyNxjFKRdCZFqVxieWmJfKlCNhln
      eXmZ+FqMeGp9yPh7f/9dPN396MU85UKGpegqmpHmvbdvod7br6YbpBOrrK6t8o0//TOmV9Mf
      29YkFV/lnTfeJFna2xXl6mAoRO1JipWm9n6cnGdhaRYp3E62WCKfiVMs6dw9//e8dn6YYPcx
      mstzdJ/+LDNXXmd0fo0XfvErjL45gt+Rp/3UURJJjaPdIV79xt+RVB3823/3uxRTSVRd4fJr
      3yId6aOpFKPiDrC6dgtbfBpPo5UVy0GKsXn+zW/+c46ePckP3/4hHYdPceG7f83dhSSf+eVf
      AFPlW3/xRwzPr/H8z3ye2dk4p0/1sxaLsRaPc/6b32B0Ic0zL/40K7EMlUy+1m/tlokjwA7Q
      y3nGhq+iOxqxAk5/I51d3Qz09dLd04fXpnD60y/xhRdO4wy2cObkAJLFz8//8q8y2Bki3NJN
      XyRIvlTB7QvitEKo6wi//itfwWNXaGhuofvAAD6nlzPnzmCVTIKhIKZewe4KcmSgm+buQQKu
      9XjyqsTp04cZHRoCR4gvv/wrHO4IAib6h/tt8yHbvQSDjXR1NuN1OZEcIb788q/S32RFcfpw
      u2oxdqm6xI2wHbA8M0osZ9Db1wfFDJLDQz6XpSHgJpkpE/DaGB8dxxmO4LaYhBoaKaRWmJqP
      0Xmgi0rewCGXsfgCLE6N427sgNwq8aLEQF8PciVPUrVgU/PYgiFsRom7I1O0dh/ALOZwe6wU
      TBdaIUVTYxPZeJTpxRidBwawlBNMLcTpOtiFmtNwWsv39ttHcW2WvOSjyW2ykjNp8UhML8Xp
      OnCQ5MI0JclBT28XdmX3fY9u9kaYSABhXxJ3ggVhE/4/Nu2F7w69ekQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
